steps:

# Get the saved global npm cache from Google Cloud Storage
- name: 'gcr.io/cloud-builders/gsutil'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    if gsutil -q stat gs://${PROJECT_ID}_cloudbuild/npm_cache.tar.gz; then
      cd /
      gsutil cp gs://${PROJECT_ID}_cloudbuild/npm_cache.tar.gz npm_cache.tar.gz
      tar -xpzf npm_cache.tar.gz
    fi
  volumes:
  - name: 'npm_cache'
    path: /root/.npm

# Install npm modules
- name: 'gcr.io/cloud-builders/npm'
  env: ['CI=true']
  args: ['install', '--quiet']
  volumes:
  - name: 'npm_cache'
    path: /root/.npm

# Save the global npm cache to Google Cloud Storage
- name: 'gcr.io/cloud-builders/gsutil'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      echo 'Creating an archive of /root/.npm directory'
      tar -cpzf npm_cache.tar.gz /root/.npm/
      echo 'Saving archive to Cloud Storage'
      gsutil cp npm_cache.tar.gz gs://${PROJECT_ID}_cloudbuild/npm_cache.tar.gz
      # Cleaning up
      echo 'Deleting npm_cache.tar.gz'
      rm -f npm_cache.tar.gz
  volumes:
  - name: 'npm_cache'
    path: /root/.npm

# Run unit tests
- name: 'gcr.io/cloud-builders/npm'
  args: ['run', 'test:unit']

# Build for production
- name: 'gcr.io/cloud-builders/npm'
  args: ['run', 'build']

# Deploy to App Engine (do not promote)
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['app', 'deploy', '--no-promote', '--version=$BUILD_ID']

# Run end to end testing
- name: 'cypress/base:8'
  entrypoint: 'bash'
  env: [
    'CYPRESS_RECORD_KEY=${_CYPRESS_RECORD_KEY}',
    'CYPRESS_PROJECT_ID=${_CYPRESS_PROJECT_ID}'
  ]
  args: [ '-c',
    '$(npm bin)/cypress run --record --config baseUrl=https://$BUILD_ID-dot-$PROJECT_ID.appspot.com'
  ]

# Promote to live version
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['app', 'services', 'set-traffic', 'default', '--splits', '$BUILD_ID=1']